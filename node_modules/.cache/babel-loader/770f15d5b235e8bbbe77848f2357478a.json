{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iniad\\\\Documents\\\\web_design\\\\FoodOrderApp\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n\n    if (existingCartItem) {\n      const updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (action.type === 'REMOVE') {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n    const existingItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n\n    if (existingItem.amount === 1) {\n      updatedItems = state.item.filter(item => item.id != action.id);\n    } else {\n      const updatedItem = { ...existingItem,\n        amount: existingItem.amount - 1\n      };\n      updatedItems = [...state.items];\n    }\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemToCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemToCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updatedItems","updatedItem","concat","existingItem","filter","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemToCartHandler","cartContext","addItem","removeItem","children"],"sources":["C:/Users/iniad/Documents/web_design/FoodOrderApp/src/store/CartProvider.js"],"sourcesContent":["import { useReducer } from \"react\";\r\n\r\nimport CartContext from \"./cart-context\";\r\n\r\nconst defaultCartState = {\r\n    items: [],\r\n    totalAmount : 0\r\n}\r\n\r\nconst cartReducer = (state, action) => {\r\n    if (action.type === 'ADD') {\r\n      const updatedTotalAmount =\r\n        state.totalAmount + action.item.price * action.item.amount;\r\n  \r\n      const existingCartItemIndex = state.items.findIndex(\r\n        (item) => item.id === action.item.id\r\n      );\r\n      const existingCartItem = state.items[existingCartItemIndex];\r\n      let updatedItems;\r\n  \r\n      if (existingCartItem) {\r\n        const updatedItem = {\r\n          ...existingCartItem,\r\n          amount: existingCartItem.amount + action.item.amount,\r\n        };\r\n        updatedItems = [...state.items];\r\n        updatedItems[existingCartItemIndex] = updatedItem;\r\n      } else {\r\n        updatedItems = state.items.concat(action.item);\r\n      }  \r\n      return {\r\n        items: updatedItems,\r\n        totalAmount: updatedTotalAmount,\r\n      };\r\n    }\r\n    if(action.type === 'REMOVE'){\r\n        const existingCartItemIndex = state.items.findIndex(\r\n            (item) => item.id === action.id\r\n        );\r\n        const existingItem = state.items[existingCartItemIndex]\r\n        const updatedTotalAmount = state.totalAmount - existingItem.price;\r\n        let updatedItems;\r\n        if(existingItem.amount === 1){\r\n            updatedItems = state.item.filter(item => item.id != action.id);\r\n        }else{\r\n            const updatedItem = {...existingItem,amount:existingItem.amount -1};\r\n            updatedItems = [...state.items]\r\n        }\r\n\r\n    }\r\n    return defaultCartState;\r\n};\r\n\r\nconst CartProvider = props => {\r\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\r\n\r\n    const addItemToCartHandler = item => {\r\n        dispatchCartAction({type: 'ADD', item:item});\r\n    };\r\n\r\n    const removeItemToCartHandler = id => {\r\n        dispatchCartAction({type: 'REMOVE', id:id});\r\n\r\n    };\r\n\r\n    const cartContext = {\r\n        items : cartState.items,\r\n        totalAmount : cartState.totalAmount,\r\n        addItem: addItemToCartHandler,\r\n        removeItem: removeItemToCartHandler\r\n    }\r\n    return (\r\n        <CartContext.Provider value={cartContext}>\r\n            {props.children}\r\n        </CartContext.Provider>\r\n    )\r\n};\r\nexport default CartProvider;"],"mappings":"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"},"metadata":{},"sourceType":"module"}